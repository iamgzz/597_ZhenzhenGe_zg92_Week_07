head(prostate)
lmod_for3 <- lm(lpsa ~ lweight, prostate)
summary(lmod_for3)
lmod_for4 <- lm(lpsa ~ age, prostate)
summary(lmod_for4)
lmod_for5 <- lm(lpsa ~ lbph, prostate)
summary(lmod_for5)
lmod_for6 <- lm(lpsa ~ svi, prostate)
summary(lmod_for6)
lmod_for2 <- lm(lpsa ~ lcavol, prostate)
summary(lmod_for2)
lmod_for7 <- lm(lpsa ~ lcp, prostate)
summary(lmod_for7)
lmod_for8 <- lm(lpsa ~ gleason, prostate)
summary(lmod_for8)
lmod_for9 <- lm(lpsa ~ pgg45, prostate)
summary(lmod_for9)
summary(lmod_for10)
lmod_for10 <- update(lmod_for2, .~.+lweight)
summary(lmod_for10)
lmod_for11 <- update(lmod_for2, .~.+age)
summary(lmod_for11)
lmod_for12 <- update(lmod_for2, .~.+lbph)
summary(lmod_for12)
lmod_for13 <- update(lmod_for2, .~.+svi)
summary(lmod_for13)
lmod_for14 <- update(lmod_for2, .~.+lcp)
summary(lmod_for14)
lmod_for15 <- update(lmod_for2, .~.+gleason)
summary(lmod_for15)
lmod_for16 <- update(lmod_for2, .~.+pgg45)
summary(lmod_for16)
lmod_for17 <- update(lmod_for10, .~.+age)
summary(lmod_for17)
lmod_for17 <- update(lmod_for10, .~.+age)
summary(lmod_for17)
lmod_for18 <- update(lmod_for10, .~.+lbph)
summary(lmod_for18)
lmod_for19 <- update(lmod_for10, .~.+svi)
summary(lmod_for19)
lmod_for11 <- update(lmod_for2, .~.+age)
summary(lmod_for11)
lmod_for17 <- update(lmod_for10, .~.+age)
summary(lmod_for17)
lmod_for18 <- update(lmod_for10, .~.+lbph)
summary(lmod_for18)
lmod_for19 <- update(lmod_for10, .~.+svi)
summary(lmod_for19)
summary(lmod_for20)
lmod_for20 <- update(lmod_for10, .~.+lcp)
summary(lmod_for20)
lmod_for21 <- update(lmod_for10, .~.+gleason)
summary(lmod_for21)
lmod_for22 <- update(lmod_for10, .~.+pgg45)
summary(lmod_for22)
lmod_for23 <- update(lmod_for10, .~.+age)
summary(lmod_for23)
lmod_for23 <- update(lmod_for19, .~.+age)
summary(lmod_for23)
lmod_for24 <- update(lmod_for19, .~.+lbph)
summary(lmod_for24)
lmod_for25 <- update(lmod_for19, .~.+lcp)
summary(lmod_for25)
lmod_for26 <- update(lmod_for19, .~.+gleason)
summary(lmod_for26)
lmod_for27 <- update(lmod_for19, .~.+pgg45)
summary(lmod_for27)
# Fit new model by adding quadratic variable and plot in red line
lmod_qua <- lm(dist ~ speed+I(speed^2), cars)
summary(lmod_qua)
lines(sort(cars$speed), fitted(lmod_qua)[order(cars$speed)], col='red', type='l')
summary(lmod_qua)
lines(sort(cars$speed), fitted(lmod_qua)[order(cars$speed)], col='red', type='l')
lmod_qua <- lm(dist ~ speed+I(speed^2), data = cars)
summary(lmod_qua)
lines(sort(cars$speed), fitted(lmod_qua)[order(cars$speed)], col='red', type='l')
# Fit new model by adding quadratic variable and plot in red line
lmod_qua <- lm(dist ~ speed+I(speed^2), data = cars)
summary(lmod_qua)
lines(sort(cars$speed), fitted(lmod_qua)[order(cars$speed)], col='red', type='l')
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
library(faraway)
# Chunk 2
# Partial Regression of "expend"
# No obivious linearity
data(sat)
head(sat)
lmod_sat <- lm(total ~ expend + salary + ratio + takers, data = sat)
summary(lmod_sat)
resid_d <- residuals(lm(total ~ salary + ratio + takers, data = sat))
resid_m <- residuals(lm(expend ~ salary + ratio + takers, data = sat))
plot(resid_m, resid_d, xlab = "Expend Residuals", ylab = "Total Score Residuals")
# Compare the slope on the plot to the original regression
coef(lm(resid_d ~ resid_m))
summary(lm(resid_d ~ resid_m))
summary(lm(total ~ resid_m, sat))
coef(lmod_sat)
abline(0,coef(lmod_sat)['expend'])
# Partial regression of "ratio"
# No obivious linearity
resid_d2 <- residuals(lm(total ~ expend + salary + takers, data = sat))
resid_m2 <- residuals(lm(ratio ~ expend + salary + takers, data = sat))
plot(resid_m2, resid_d2, xlab = "Ratio Residuals", ylab = "Total Score Residuals")
coef(lm(resid_d2 ~ resid_m2))
summary(lm(resid_d2 ~ resid_m2))
summary(lm(total ~ resid_m2, sat))
abline(0,coef(lmod_sat)['ratio'])
# Partial regression of "salary"
# No obivious linearity
resid_d3 <- residuals(lm(total ~ expend + ratio + takers, data = sat))
resid_m3 <- residuals(lm(salary ~ expend + ratio + takers, data = sat))
plot(resid_m3, resid_d3, xlab = "Salary Residuals", ylab = "Total Score Residuals")
coef(lm(resid_d3 ~ resid_m3))
summary(lm(resid_d3 ~ resid_m3))
summary(lm(total ~ resid_m3, sat))
abline(0,coef(lmod_sat)['salary'])
# Partial regression of "takers"
# Show clear linearity relation between response "total" and predictor "takers"
resid_d4 <- residuals(lm(total ~ expend + ratio + salary, data = sat))
resid_m4 <- residuals(lm(takers ~ expend + ratio + salary, data = sat))
plot(resid_m4, resid_d4, xlab = "Takers Residuals", ylab = "Total Score Residuals")
coef(lm(resid_d4 ~ resid_m4))
summary(lm(resid_d4 ~ resid_m4))
summary(lm(total ~ resid_m4, sat))
abline(0,coef(lmod_sat)['takers'])
# Chunk 3
# Leverage points
hatv <- hatvalues(lmod_sat)
head(hatv)
sum(hatv)
states <- row.names(sat)
halfnorm(hatv, labs = states, ylab = "Leverages")
qqnorm(rstandard(lmod_sat))
abline(0,1)
# Chunk 4
# Check for outliers
stud <- rstudent(lmod_sat)
stud[which.max(abs(stud))]
qt(.05/(50*2),44)
# Chunk 5
# Cook's D statistic
cook <- cooks.distance(lmod_sat)
halfnorm(cook, 3, labs = states, ylab = "Cook's distances")
# Change in coefficients
lmod_sati <- lm(total ~ expend + salary + ratio + takers, data = sat, subset = (cook < max(cook)))
summary(lmod_sati)
summary(lmod_sat)
# Chunk 6
# Fit a model with all predictors
data(prostate)
head(prostate)
lmod_pros <- lm(lpsa ~ ., data = prostate)
summary(lmod_pros)
# Partial regression of "lcavol"
# Show certain linearity
pros_d1 <- residuals(lm(lpsa ~ lweight + age + lbph + svi + lcp + gleason + pgg45, data = prostate))
pros_m1 <- residuals(lm(lcavol ~ lweight + age + lbph + svi + lcp + gleason + pgg45, data = prostate))
plot(pros_m1, pros_d1, xlab = "Lcavol Residuals", ylab = "Lpsa Residuals")
coef(lm(pros_d1 ~ pros_m1))
summary(lm(pros_d1 ~ pros_m1))
summary(lm(lpsa ~ pros_m1, prostate))
abline(0,coef(lmod_pros)['lweight'])
# Partial regression of "gleason"
# No obivious linearity
pros_d2 <- residuals(lm(lpsa ~ lcavol + lweight + age + lbph + svi + lcp + pgg45, data = prostate))
pros_m2 <- residuals(lm(gleason ~ lcavol + lweight + age + lbph + svi + lcp + pgg45, data = prostate))
plot(pros_m2, pros_d2, xlab = "Gleason Residuals", ylab = "Lpsa Residuals")
coef(lm(pros_d2 ~ pros_m2))
summary(lm(pros_d2 ~ pros_m2))
summary(lm(lpsa ~ pros_m2, prostate))
abline(0,coef(lmod_pros)['gleason'])
# Chunk 7
# Leverage points
hatv_pros <- hatvalues(lmod_pros)
head(hatv_pros)
sum(hatv_pros)
pros <- row.names(prostate)
halfnorm(hatv_pros, labs = pros, ylab = "Leverages")
qqnorm(rstandard(lmod_pros))
abline(0,1)
# Chunk 8
# Check for outliers
stud_pros <- rstudent(lmod_pros)
stud_pros[which.max(abs(stud_pros))]
qt(.05/(97*2),97-9-2)
# Chunk 9
# Cook's D statistic
cook <- cooks.distance(lmod_pros)
halfnorm(cook, 3, labs = pros, ylab = "Cook's distances")
# Change in coefficients
lmod_prosi <- lm(lpsa ~ ., data = prostate, subset = (cook < max(cook)))
summary(lmod_prosi)
summary(lmod_pros)
# Chunk 10
# Fit the model
head(cars)
lmod_car <- lm(dist ~ speed, cars)
summary(lmod_car)
# Chunk 11
# Plot the data and the fitted line
plot(dist ~ speed, cars, xlab="Speed", ylab="Distance")
abline(lmod_car)
# Chunk 12
# Fit new model by adding quadratic variable and plot in red line
lmod_qua <- lm(dist ~ speed+I(speed^2), data = cars)
summary(lmod_qua)
lines(sort(cars$speed), fitted(lmod_qua)[order(cars$speed)], col='red', type='l')
# Chunk 13
# Fit new model by using sqrt(dist) as response and plot in green point
lmod_squ <- lm(sqrt(dist) ~ speed, cars)
summary(lmod_squ)
lines(sort(cars$speed), (fitted(lmod_squ)[order(cars$speed)])^2, col='green', type='p')
# Chunk 14
# Fit the model with all predictors
# The predictor "gleason" has the largest p-value
summary(lmod_pros)
# Remove "gleason", fit the model again
# The predictor "lcp" has the largest p-value
lmod_pros2 <- update(lmod_pros, .~.-gleason)
summary(lmod_pros2)
# Remove "lcp", fit the model again
# The predictor "pgg45" has the largest p-value
lmod_pros3 <- update(lmod_pros2, .~.-lcp)
summary(lmod_pros3)
# Remove "pgg45", fit the model again
# The predictor "age" has the largest p-value
lmod_pros4 <- update(lmod_pros3, .~.-pgg45)
summary(lmod_pros4)
# Remove "age", fit the model again
# The predictor "lbph" has the largest p-value
lmod_pros5 <- update(lmod_pros4, .~.-age)
summary(lmod_pros5)
# Remove "lbph", fit the model again
# All the predictors are significant at level 0.05
lmod_pros6 <- update(lmod_pros5, .~.-lbph)
summary(lmod_pros6)
# Chunk 15
# Start with the null model with only intercept
# The p-value for intercept is significant
# We add one predictor "lcavol" to the null model
# The p-value for "lcavol" is significant: <2e-16
lmod_for1 <- lm(lpsa ~ 1, prostate)
summary(lmod_for1)
lmod_for2 <- lm(lpsa ~ lcavol, prostate)
summary(lmod_for2)
# We add one predictor "lweight" to the null model
# The p-value for "lweight" is significant: 0.000373
lmod_for3 <- lm(lpsa ~ lweight, prostate)
summary(lmod_for3)
# We add one predictor "age" to the null model
# The p-value for "age" is not significant at level 0.05: 0.0968
lmod_for4 <- lm(lpsa ~ age, prostate)
summary(lmod_for4)
# We add one predictor "lbph" to the null model
# The p-value for "lbph" is not significant at level 0.05: 0.078
lmod_for5 <- lm(lpsa ~ lbph, prostate)
summary(lmod_for5)
# We add one predictor "svi" to the null model
# The p-value for "svi" is significant at level 0.05: 1.5e-09
lmod_for6 <- lm(lpsa ~ svi, prostate)
summary(lmod_for6)
# We add one predictor "lcp" to the null model
# The p-value for "lcp" is significant at level 0.05: 5.88e-09
lmod_for7 <- lm(lpsa ~ lcp, prostate)
summary(lmod_for7)
# We add one predictor "gleason" to the null model
# The p-value for "gleason" is significant at level 0.05: 0.0002
lmod_for8 <- lm(lpsa ~ gleason, prostate)
summary(lmod_for8)
# We add one predictor "pgg45" to the null model
# The p-value for "pgg45" is significant at level 0.05: 1.64e-05
lmod_for9 <- lm(lpsa ~ pgg45, prostate)
summary(lmod_for9)
# Chunk 16
# We add one predictor "lweight" to the model with "lcavol" as its predictor
# The p-value for "lweight" is significant: 0.00161
lmod_for10 <- update(lmod_for2, .~.+lweight)
summary(lmod_for10)
# We add one predictor "age" to the model with "lcavol" as its predictor
# The p-value for "age" is not significant: 0.9494
lmod_for11 <- update(lmod_for2, .~.+age)
summary(lmod_for11)
# We add one predictor "lbph" to the model with "lcavol" as its predictor
# The p-value for "lbph" is significant: 0.0209
lmod_for12 <- update(lmod_for2, .~.+lbph)
summary(lmod_for12)
# We add one predictor "svi" to the model with "lcavol" as its predictor
# The p-value for "svi" is significant: 0.00317
lmod_for13 <- update(lmod_for2, .~.+svi)
summary(lmod_for13)
# We add one predictor "lcp" to the model with "lcavol" as its predictor
# The p-value for "lcp" is not significant: 0.306
lmod_for14 <- update(lmod_for2, .~.+lcp)
summary(lmod_for14)
# We add one predictor "gleason" to the model with "lcavol" as its predictor
# The p-value for "gleason" is not significant: 0.416
lmod_for15 <- update(lmod_for2, .~.+gleason)
summary(lmod_for15)
# We add one predictor "pgg45" to the model with "lcavol" as its predictor
# The p-value for "pgg45" is not significant: 0.0982
lmod_for16 <- update(lmod_for2, .~.+pgg45)
summary(lmod_for16)
# Chunk 17
# Add each predictor to the model, which now has "lcavol" and "lweight" as its predictors
# The p-value for "age" is not significant: 0.39082
# The p-value for "lbph" is not significant: 0.276
# The p-value for "svi" is significant: 0.00203
# The p-value for "lcp" is not significant: 0.22478
# The p-value for "gleason" is not significant: 0.24109
# The p-value for "pgg45" is not significant: 0.06257
lmod_for17 <- update(lmod_for10, .~.+age)
summary(lmod_for17)
lmod_for18 <- update(lmod_for10, .~.+lbph)
summary(lmod_for18)
lmod_for19 <- update(lmod_for10, .~.+svi)
summary(lmod_for19)
lmod_for20 <- update(lmod_for10, .~.+lcp)
summary(lmod_for20)
lmod_for21 <- update(lmod_for10, .~.+gleason)
summary(lmod_for21)
lmod_for22 <- update(lmod_for10, .~.+pgg45)
summary(lmod_for22)
# Chunk 18
# Add each predictor to the model, which now has "lcavol", "lweight" and "svi" as its predictors
# The p-value for "age" is not significant: 0.378979
# The p-value for "lbph" is not significant: 0.11213
# The p-value for "lcp" is not significant: 0.72596
# The p-value for "gleason" is not significant: 0.387125
# The p-value for "pgg45" is not significant: 0.293222
lmod_for23 <- update(lmod_for19, .~.+age)
summary(lmod_for23)
lmod_for24 <- update(lmod_for19, .~.+lbph)
summary(lmod_for24)
lmod_for25 <- update(lmod_for19, .~.+lcp)
summary(lmod_for25)
lmod_for26 <- update(lmod_for19, .~.+gleason)
summary(lmod_for26)
lmod_for27 <- update(lmod_for19, .~.+pgg45)
summary(lmod_for27)
# (a) Plot distance against speed
head(cars)
lmod_car <- lm(dist ~ speed, cars)
summary(lmod_car)
# (b) Show a linear fit to the data on the plot
plot(dist ~ speed, cars, xlab="Speed", ylab="Distance")
abline(lmod_car)
# (c) Show a quadratic fit to the data on the plot
# Fit new model by adding quadratic variable and plot in red line
lmod_qua <- lm(dist ~ speed+I(speed^2), data = cars)
summary(lmod_qua)
lines(sort(cars$speed), fitted(lmod_qua)[order(cars$speed)], col='red', type='l')
# (d) Now use sqrt(dist) as the response and fit a linear model
# It looks similar and close to the line we fitted in quadratic model
# Fit new model by using sqrt(dist) as response and plot in green point
lmod_squ <- lm(sqrt(dist) ~ speed, cars)
summary(lmod_squ)
lines(sort(cars$speed), (fitted(lmod_squ)[order(cars$speed)])^2, col='green', type='p')
H
knit_with_parameters('~/Documents/Learning/596 Linear Regression/MSDS596_hw6_ZhenzhenGe_zg92.Rmd')
ggplot(data_join_tidy, aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(curl)
library(readr)
library(tidyr)
library(stringr)
url_mat <- "http://apps.who.int/gho/athena/data/xmart.csv?target=GHO/MDG_0000000025,MDG_0000000026&profile=crosstable&filter=COUNTRY:*;YEAR:*&x-sideaxis=COUNTRY;YEAR&x-topaxis=GHO"
download.file(url_mat, "data_mat.csv")
data_mat_raw <- read_csv("data_mat.csv")
data_mat_tidy <- data_mat_raw %>%
separate(`Maternal mortality ratio (per 100 000 live births)`, into = c("Maternal mortality ratio","bounds"), sep = "\\[") %>%
separate(bounds, into = c("Lower_bound","Upper_bound"), sep = "-") %>%
separate(Year, into = c("Year","Year2"), sep = "-") %>%
gather(key = "Index", value = "Year", 2:3) %>%
filter(Year != "NA")
data_mat_tidy$`Maternal mortality ratio` <- as.numeric(gsub("[[:space:]]","",data_mat_tidy$`Maternal mortality ratio`))
data_mat_tidy$Lower_bound <- as.numeric(gsub("[[:space:]]","",data_mat_tidy$Lower_bound))
data_mat_tidy$Upper_bound <- as.numeric(gsub("[[:space:]]|\\]","",data_mat_tidy$Upper_bound))
url_income <- "http://apps.who.int/gho/athena/data/xmart.csv?target=GHO/WHS9_93&profile=crosstable&filter=COUNTRY:*;REGION:*&x-sideaxis=COUNTRY&x-topaxis=GHO;YEAR"
download.file(url_income, "data_income.csv")
data_income_raw <- read_csv("data_income.csv",skip = 1)
data_income_tidy <- data_income_raw %>%
gather(key = "Year", value = "GNI_Per_Cap",2:25)
data_income_tidy$GNI_Per_Cap <- as.numeric(gsub("[[:space:]]","",data_income_tidy$GNI_Per_Cap))
data_join_raw <- left_join(data_mat_tidy,data_income_tidy)
data_join_tidy <- data_join_raw %>%
filter(is.na(GNI_Per_Cap) == FALSE) %>%
select(Country, Year, `Maternal mortality ratio`,`Births attended by skilled health personnel (%)`,GNI_Per_Cap)
data_join_tidy$Year <- as.numeric(data_join_tidy$Year)
colnames(data_join_tidy)[3:4] <- c("Maternal_Mortality_Ratio","Birth_Attend_Rate")
ggplot(data_join_tidy, aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point()
View(data_join_tidy)
ggplot(data_join_tidy, aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point() + xlim(0,75000)
ggplot(filter(data_join_tidy, Maternal_Mortality_Ratio != "NA", aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point() + xlim(0,75000)
ggplot(filter(data_join_tidy, Maternal_Mortality_Ratio != "NA"), aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point() + xlim(0,75000)
ggplot(filter(data_join_tidy, Maternal_Mortality_Ratio != "NA"), aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point() + xlim(0,75000)
View(data_income_tidy)
ggplot(filter(data_join_tidy, Maternal_Mortality_Ratio != "NA"), aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point() + xlim(0,75000) + facet_grid(.~GNI_Per_Cap, scales = "free")
ggplot(filter(data_join_tidy, Maternal_Mortality_Ratio != "NA"), aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point() + xlim(0,75000)
ggplot(filter(data_join_tidy, Maternal_Mortality_Ratio != "NA"), aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point() + xlim(0,76000)
ggplot(filter(data_join_tidy, Maternal_Mortality_Ratio != "NA"), aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point() + xlim(0,76000) + ggtitle("Maternal Mortality Ratio Per 100,000 Births against GNI per capita")
data_outlier <- filter(data_join_tidy, Maternal_Mortality_Ratio > 1500)
ggplot(filter(data_join_tidy, Maternal_Mortality_Ratio != "NA"), aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point() + xlim(0,76000) + ggtitle("Maternal Mortality Ratio Per 100,000 Births against GNI per capita") + geom_text(aes(label = country), data = data_outlier)
ggplot(filter(data_join_tidy, Maternal_Mortality_Ratio != "NA"), aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point() + xlim(0,76000) + ggtitle("Maternal Mortality Ratio Per 100,000 Births against GNI per capita") + geom_text(aes(label = Country), data = data_outlier)
ggplot(filter(data_join_tidy, Maternal_Mortality_Ratio != "NA" & Year = 2013), aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point() + xlim(0,76000) + ggtitle("2013 Maternal Mortality Ratio Per 100,000 Births against GNI per capita") + geom_text(aes(label = Country), data = data_outlier)
ggplot(filter(data_join_tidy, Maternal_Mortality_Ratio != "NA" & Year == 2013), aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point() + xlim(0,76000) + ggtitle("2013 Maternal Mortality Ratio Per 100,000 Births against GNI per capita") + geom_text(aes(label = Country), data = data_outlier)
ggplot(filter(data_join_tidy, Maternal_Mortality_Ratio != "NA" & Year == 2000), aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point() + xlim(0,76000) + ggtitle("2000 Maternal Mortality Ratio Per 100,000 Births against GNI per capita") + geom_text(aes(label = Country), data = data_outlier)
data_outlier <- filter(data_join_tidy, Maternal_Mortality_Ratio > 1500)
ggplot(filter(data_join_tidy, Maternal_Mortality_Ratio != "NA" & Year == 2000), aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point() + xlim(0,76000) + ggtitle("2000 Maternal Mortality Ratio Per 100,000 Births against GNI per capita") + geom_text(aes(label = Country), data = data_outlier)
ggplot(filter(data_join_tidy, Maternal_Mortality_Ratio != "NA" & Year == 2000), aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point() + xlim(0,76000) + ggtitle("2000 Maternal Mortality Ratio Per 100,000 Births against GNI per capita") + facet_grid(.~Year)+ geom_text(aes(label = Country), data = data_outlier)
ggplot(filter(data_join_tidy, Maternal_Mortality_Ratio != "NA"), aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point() + xlim(0,76000) + ggtitle("2000 Maternal Mortality Ratio Per 100,000 Births against GNI per capita") + facet_grid(.~Year)+ geom_text(aes(label = Country), data = data_outlier)
ggplot(filter(data_join_tidy, Maternal_Mortality_Ratio != "NA"), aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point() + ggtitle("2000 Maternal Mortality Ratio Per 100,000 Births against GNI per capita") + facet_grid(.~Year)+ geom_text(aes(label = Country), data = data_outlier)
data_outlier <- filter(data_join_tidy, Maternal_Mortality_Ratio > 1000)
ggplot(filter(data_join_tidy, Maternal_Mortality_Ratio != "NA"), aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point() + ggtitle("2000 Maternal Mortality Ratio Per 100,000 Births against GNI per capita") + facet_grid(.~Year)+ geom_text(aes(label = Country), data = data_outlier)
data_outlier <- filter(data_join_tidy, Maternal_Mortality_Ratio > 1000 | GNI_Per_Cap > 40000)
ggplot(filter(data_join_tidy, Maternal_Mortality_Ratio != "NA"), aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point() + ggtitle("2000 Maternal Mortality Ratio Per 100,000 Births against GNI per capita") + facet_grid(.~Year)+ geom_text(aes(label = Country), data = data_outlier)
data_outlier <- filter(data_join_tidy, Maternal_Mortality_Ratio > 1000 || GNI_Per_Cap > 40000)
ggplot(filter(data_join_tidy, Maternal_Mortality_Ratio != "NA"), aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point() + ggtitle("2000 Maternal Mortality Ratio Per 100,000 Births against GNI per capita") + facet_grid(.~Year)+ geom_text(aes(label = Country), data = data_outlier)
data_outlier <- filter(data_join_tidy, Maternal_Mortality_Ratio > 1000)
ggplot(filter(data_join_tidy, Maternal_Mortality_Ratio != "NA"), aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point() + ggtitle("2000 Maternal Mortality Ratio Per 100,000 Births against GNI per capita") + facet_grid(.~Year)+ geom_text(aes(label = Country), data = data_outlier)
data_outlier <- filter(data_join_tidy, Maternal_Mortality_Ratio > 1200)
ggplot(filter(data_join_tidy, Maternal_Mortality_Ratio != "NA"), aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point() + ggtitle("2000 Maternal Mortality Ratio Per 100,000 Births against GNI per capita") + facet_grid(.~Year)+ geom_text(aes(label = Country), data = data_outlier)
data_outlier <- filter(data_join_tidy, Maternal_Mortality_Ratio > 1300)
ggplot(filter(data_join_tidy, Maternal_Mortality_Ratio != "NA"), aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point() + ggtitle("2000 Maternal Mortality Ratio Per 100,000 Births against GNI per capita") + facet_grid(.~Year)+ geom_text(aes(label = Country), data = data_outlier)
ggplot(filter(data_join_tidy, Maternal_Mortality_Ratio != "NA"), aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point(aes(size = Maternal_Mortality_Ratio)) + ggtitle("2000 Maternal Mortality Ratio Per 100,000 Births against GNI per capita") + facet_grid(.~Year)+ geom_text(aes(label = Country), data = data_outlier)
ggplot(filter(data_join_tidy, Maternal_Mortality_Ratio != "NA"), aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point(aes(size = Maternal_Mortality_Ratio)) + ggtitle("2000 Maternal Mortality Ratio Per 100,000 Births against GNI per capita") + facet_grid(.~Year)+ geom_text(aes(label = Country), data = data_outlier,alpha = .25)
ggplot(filter(data_join_tidy, Maternal_Mortality_Ratio != "NA"), aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point(aes(size = Maternal_Mortality_Ratio)) + ggtitle("2000 Maternal Mortality Ratio Per 100,000 Births against GNI per capita") + facet_grid(.~Year)+ geom_label(aes(label = Country), data = data_outlier,alpha = .25)
ggplot(filter(data_join_tidy, Maternal_Mortality_Ratio != "NA"), aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point(color="Green") + ggtitle("2000 Maternal Mortality Ratio Per 100,000 Births against GNI per capita") + facet_grid(.~Year)+ geom_label(aes(label = Country), data = data_outlier,alpha = .25)
ggplot(filter(data_join_tidy, Maternal_Mortality_Ratio != "NA"), aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point(color="Blue") + ggtitle("2000 Maternal Mortality Ratio Per 100,000 Births against GNI per capita") + facet_grid(.~Year)+ geom_label(aes(label = Country), data = data_outlier,alpha = .25)
ggplot(filter(data_join_tidy, Maternal_Mortality_Ratio != "NA"), aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point(color="Blue") + ggtitle("2000 Maternal Mortality Ratio Per 100,000 Births against GNI per capita") + facet_grid(.~Year)+ ggrepel::geom_label_repel(aes(label = Country), data = data_outlier,alpha = .25)
ggplot(filter(data_join_tidy, Maternal_Mortality_Ratio != "NA"), aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point(colour = "grey90") + ggtitle("2000 Maternal Mortality Ratio Per 100,000 Births against GNI per capita") + facet_grid(.~Year)+ ggrepel::geom_label_repel(aes(label = Country), data = data_outlier,alpha = .25)
ggplot(filter(data_join_tidy, Maternal_Mortality_Ratio != "NA"), aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point(colour = "grey30") + ggtitle("2000 Maternal Mortality Ratio Per 100,000 Births against GNI per capita") + facet_grid(.~Year)+ ggrepel::geom_label_repel(aes(label = Country), data = data_outlier,alpha = .25)
ggplot(filter(data_join_tidy, Maternal_Mortality_Ratio != "NA"), aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point(colour = "grey50") + ggtitle("2000 Maternal Mortality Ratio Per 100,000 Births against GNI per capita") + facet_grid(.~Year)+ ggrepel::geom_label_repel(aes(label = Country), data = data_outlier,alpha = .25)
data_outlier <- filter(data_join_tidy, Maternal_Mortality_Ratio > 1000)
ggplot(filter(data_join_tidy, Maternal_Mortality_Ratio != "NA"), aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point(colour = "grey50") + ggtitle("2000 Maternal Mortality Ratio Per 100,000 Births against GNI per capita") + facet_grid(.~Year)+ ggrepel::geom_label_repel(aes(label = Country), data = data_outlier,alpha = .25)
data_outlier <- filter(data_join_tidy, Maternal_Mortality_Ratio > 1200)
ggplot(filter(data_join_tidy, Maternal_Mortality_Ratio != "NA"), aes(x = GNI_Per_Cap, y = Maternal_Mortality_Ratio)) + geom_point(colour = "grey50") + ggtitle("2000 Maternal Mortality Ratio Per 100,000 Births against GNI per capita") + facet_grid(.~Year)+ ggrepel::geom_label_repel(aes(label = Country), data = data_outlier,alpha = .25)
ggplot(data = filter(data_join_tidy, Birth_Attend_Rate != "NA"), aes(x = GNI_Per_Cap, y = Birth_Attend_Rate)) + geom_point(color = "grey50") + ggtitle("Births Attended By Skilled Health Personnel (%) Against GNI Per Capita")
data_lowAtt <- filter(data_join_tidy, Birth)Attend_Rate < 25)
data_lowAtt <- filter(data_join_tidy, Birth_Attend_Rate < 25)
ggplot(data = filter(data_join_tidy, Birth_Attend_Rate != "NA"), aes(x = GNI_Per_Cap, y = Birth_Attend_Rate)) + geom_point(color = "grey50") + ggtitle("Births Attended By Skilled Health Personnel (%) Against GNI Per Capita") + facet_grid(.~Year)+ ggrepel::geom_label_repel(aes(label = Country), data = data_lowAtt,alpha = .25)
ggplot(data = filter(data_join_tidy, Birth_Attend_Rate != "NA"), aes(x = GNI_Per_Cap, y = Birth_Attend_Rate)) + geom_point(color = "grey50") + ggtitle("Births Attended By Skilled Health Personnel (%) Against GNI Per Capita") + facet_wrap(.~Year, ncol = 2)+ ggrepel::geom_label_repel(aes(label = Country), data = data_lowAtt,alpha = .25)
ggplot(data = filter(data_join_tidy, Birth_Attend_Rate != "NA"), aes(x = GNI_Per_Cap, y = Birth_Attend_Rate)) + geom_point(color = "grey50") + ggtitle("Births Attended By Skilled Health Personnel (%) Against GNI Per Capita") + facet_wrap(~Year, ncol = 2)+ ggrepel::geom_label_repel(aes(label = Country), data = data_lowAtt,alpha = .25)
ggplot(data = filter(data_join_tidy, Birth_Attend_Rate != "NA" & Year > 2009), aes(x = GNI_Per_Cap, y = Birth_Attend_Rate)) + geom_point(color = "grey50") + ggtitle("2010-2013 Births Attended By Skilled Health Personnel (%) Against GNI Per Capita") + facet_wrap(~Year, ncol = 2)+ ggrepel::geom_label_repel(aes(label = Country), data = data_lowAtt,alpha = .25)
data_lowAtt <- filter(data_join_tidy, Birth_Attend_Rate < 50)
ggplot(data = filter(data_join_tidy, Birth_Attend_Rate != "NA" & Year > 2009), aes(x = GNI_Per_Cap, y = Birth_Attend_Rate)) + geom_point(color = "grey50") + ggtitle("2010-2013 Births Attended By Skilled Health Personnel (%) Against GNI Per Capita") + facet_wrap(~Year, ncol = 2)+ ggrepel::geom_label_repel(aes(label = Country), data = data_lowAtt,alpha = .25)
data_lowAtt <- filter(data_join_tidy, Year > 2009 & Birth_Attend_Rate < 50)
ggplot(data = filter(data_join_tidy, Birth_Attend_Rate != "NA" & Year > 2009), aes(x = GNI_Per_Cap, y = Birth_Attend_Rate)) + geom_point(color = "grey50") + ggtitle("2010-2013 Births Attended By Skilled Health Personnel (%) Against GNI Per Capita") + facet_wrap(~Year, ncol = 2)+ ggrepel::geom_label_repel(aes(label = Country), data = data_lowAtt,alpha = .25)
write_csv(data_join_tidy)
data_path <- getwd()
write_csv(data_join_tidy, path = data_path)
write_csv(data_join_tidy, data_path)
data_path <- getwd()
write_csv(data_join_tidy, data_path)
getwd()
setwd("~/Documents/Learning/Data Science 597/597_ZhenzhenGe_zg92_Week_07")
data_path <- getwd()
write_csv(data_join_tidy, data_path)
write_csv(data_join_tidy, data_path/data.csv)
write_csv(data_join_tidy, data_path)
write_csv(data_join_tidy, "data_final.csv")
write_csv(data_join_tidy, "data_join_tidy.csv")
View(data_mat_raw)
View(data_mat_raw)
library(choroplethr)
data(df_pop_country)
View(df_pop_country)
data_join_map <- data_join_tidy
data_join_map$Country- tolower(data_join_map$Country)
View(data_join_map)
data_join_map$Country <- tolower(data_join_map$Country)
View(df_pop_country)
View(df_pop_country)
left_join(data_join_map, df_pop_country, by = c("Country" = "region"))
a <- left_join(data_join_map, df_pop_country, by = c("Country" = "region"))
View(a)
data_join_map <- data_join_tidy %>%
select(Country,Year,Maternal_Mortality_Ratio) %>%
filter(Year == 2013)
data_join_map$Country <- tolower(data_join_map$Country)
data_join_map <- data_join_tidy %>%
select(Country,Year,Maternal_Mortality_Ratio) %>%
filter(Year == 2013)
View(data_join_raw)
View(data_mat_raw)
filter(Year == 2000)
data_join_map <- data_join_tidy %>%
select(Country,Year,Maternal_Mortality_Ratio) %>%
filter(Year == 2000)
data_join_map$Country <- tolower(data_join_map$Country)
data_join_map <- data_join_tidy %>%
filter(Year == 2000) %>%
select(Country,Maternal_Mortality_Ratio)
data_join_map <- data_join_tidy %>%
filter(Year == 2000) %>%
select(Country,Maternal_Mortality_Ratio) %>%
colnames() <- c("region","value")
data_join_map <- data_join_tidy %>%
filter(Year == 2000) %>%
select(Country,Maternal_Mortality_Ratio) %>%
colnames() = c("region","value")
colnames(data_join_map) <- c("region","value")
data_join_map$Country <- tolower(data_join_map$Country)
data_join_map$region <- tolower(data_join_map$region)
country_choropleth(data_join_map)
country_choropleth(data_join_map, title = "Maternal Mortality Ratio Per 100,000 Births in 2000")
data_mat_raw <- read_csv("data_mat.csv")
data_mat_raw <- read_csv("data_mat.csv")
View(data_mat_raw)
data_mat_raw <- read_csv("data_mat.csv")
View(data_mat_raw)
